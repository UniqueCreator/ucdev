<?xml version="1.0" encoding="utf-8"?>

<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask AssemblyFile="..\..\src\tools\bin\x86\release\uc_build_tasks_r.dll" TaskName="UniqueCreator.Build.Tasks.Model" />

  <PropertyGroup>
    <AutoGeneratedModels Condition="$(AutoGeneratedModels) == ''">Generated Files\$(Platform)\$(ProjectName)\data\models\</AutoGeneratedModels>
  </PropertyGroup>

  <PropertyGroup>
    <ModelToolPath>..\src\tools\bin\x64\release</ModelToolPath>
  </PropertyGroup>


  <ItemDefinitionGroup>

    <Model>
        <TrackerLogDirectory Condition="$(TLogLocation)== ''">$(IntermediateOutputPath)</TrackerLogDirectory>
        <InputModel>%(FileName)</InputModel>
        <ModelType>default</ModelType>
        <OutputModel>$(AutoGeneratedModels)%(FileName)</OutputModel>
        <InProject>true</InProject>
        <MinimalRebuildFromTracking>true</MinimalRebuildFromTracking>
        <OptionOptimizeMeshes>false</OptionOptimizeMeshes>
        <OptionOptimizeGraph>false</OptionOptimizeGraph>
        <OptionFlipUVs>true</OptionFlipUVs>
        <OptionPreTransformVertices>false</OptionPreTransformVertices>
        <OptionFlipWindingOrder>true</OptionFlipWindingOrder>
        <Name>noname</Name>
    </Model>

    <NormalModel>
    </NormalModel>

    <ParametrizedModel>
    </ParametrizedModel>

    <NormalParametrizedModel>
    </NormalParametrizedModel>

    <DerivativesParametrizedModel>
    </DerivativesParametrizedModel>

    <TexturedModel>
    </TexturedModel>

    <NormalTexturedModel>
    </NormalTexturedModel>

    <DerivativesTexturedModel>
    </DerivativesTexturedModel>

    <MultiTexturedModel>
    </MultiTexturedModel>

    <NormalMultiTexturedModel>
    </NormalMultiTexturedModel>

    <DerivativesMultiTexturedModel>
    </DerivativesMultiTexturedModel>

    <SkinnedModel>
    </SkinnedModel>

    <NormalSkinnedModel>
    </NormalSkinnedModel>

    <DerivativesSkinnedModel>
    </DerivativesSkinnedModel>


  </ItemDefinitionGroup>

  <Target Name="UCDEVMakeDirsForModels">
    <ItemGroup Condition="'@(Model)'!=''">
      <ModelOutputs Include="@(Model->Metadata('OutputModel')->Distinct())" />
      <ModelOutputs Include="$(TLogLocation)$(ProjectName).read.1.tlog"/>
      <ModelOutputs Include="$(TLogLocation)$(ProjectName).write.1.tlog"/>
      <ModelDirsToMake Include="@(ModelOutputs->DirectoryName())" />
    </ItemGroup>

    <MakeDir Directories="@(ModelDirsToMake)" />

    <ItemGroup>
      <ShaderDirsToMake Remove="@(ModelDirsToMake)" />
    </ItemGroup>
  </Target>

  <Target Name="UCDevGenerateModels" DependsOnTargets="UCDEVMakeDirsForModels" Condition="'@(Model)' != ''">

    <PropertyGroup>
        <TrackerLogDirectory              Condition="'%(Model.TrackerLogDirectory)'              == ''">$(TLogLocation)</TrackerLogDirectory>
        <MinimalRebuildFromTracking       Condition="'%(Model.MinimalRebuildFromTracking)'       == ''">true</MinimalRebuildFromTracking>
        <TrackFileAccess                  Condition="'%(Model.TrackFileAccess)'              == ''">true</TrackFileAccess>
    </PropertyGroup>
    
    <Model 
      Source                          ="@(Model)"
      OutputModel                     ="%(Model.OutputModel).%(ModelType).model"
      OptionsSwapYZ                   ="%(Model.OptionsSwapYZ)"

      OptionCalcTangentSpace          ="%(Model.OptionCalcTangentSpace)"
      OptionJoinIdenticalVertices     ="%(Model.OptionJoinIdenticalVertices)"
      OptionMakeLeftHanded            ="%(Model.OptionMakeLeftHanded)"
      OptionTriangulate               ="%(Model.OptionTriangulate)"
      
      OptionRemoveComponent           ="%(Model.OptionRemoveComponent)"
      OptionGenNormals                ="%(Model.OptionGenNormals)"
      OptionGenSmoothNormals          ="%(Model.OptionGenSmoothNormals)"
      OptionSplitLargeMeshes          ="%(Model.OptionSplitLargeMeshes)"

      OptionPreTransformVertices      ="%(Model.OptionPreTransformVertices)"
      OptionLimitBoneWeights          ="%(Model.OptionLimitBoneWeights)"
      OptionValidateDataStructure     ="%(Model.OptionValidateDataStructure)"
      OptionImproveCacheLocality      ="%(Model.OptionImproveCacheLocality)"

      OptionRemoveRedundantMaterials  ="%(Model.OptionRemoveRedundantMaterials)"
      OptionFixInfacingNormals        ="%(Model.OptionFixInfacingNormals)"
      OptionSortByPType               ="%(Model.OptionSortByPType)"
      OptionFindDegenerates           ="%(Model.OptionFindDegenerates)"

      OptionFindInvalidData           ="%(Model.OptionFindInvalidData)"
      OptionGenUVCoords               ="%(Model.OptionGenUVCoords)"
      OptionTransformUVCoords         ="%(Model.OptionTransformUVCoords)"
      OptionFindInstances             ="%(Model.OptionFindInstances)"

      OptionOptimizeMeshes            ="%(Model.OptionOptimizeMeshes)"
      OptionOptimizeGraph             ="%(Model.OptionOptimizeGraph)"
      OptionFlipUVs                   ="%(Model.OptionFlipUVs)"
      OptionFlipWindingOrder          ="%(Model.OptionFlipWindingOrder)"

      OptionSplitByBoneCount          ="%(Model.OptionSplitByBoneCount)"
      OptionDebone                    ="%(Model.OptionDebone)"
 
      ModelType                       ="%(Model.ModelType)"  
      Textures                        ="@(%(Model.Name)-Textures)"
      
      TrackFileAccess                 ="$(TrackFileAccess)"
      MinimalRebuildFromTracking      ="$(MinimalRebuildFromTracking)"
      TrackerLogDirectory             ="$(TrackerLogDirectory)"
      ToolPath                        ="$(ModelToolPath)"
    >

    <Output TaskParameter="OutputModel" ItemName="BinaryModels" />
    </Model>


    
    <ItemGroup>
      <BinaryModels>
        <DeploymentContent>True</DeploymentContent>
        <Link>$([MSBuild]::MakeRelative($(TargetDir), appdata/meshes/%(Filename)%(Extension)))</Link>
      </BinaryModels>
    </ItemGroup>

    <ItemGroup>
      <None Include="@(BinaryModels);" />
    </ItemGroup>
 
  </Target>


  <PropertyGroup>
      <BuildDependsOn>
      UCDevGenerateModels;
      $(BuildDependsOn)
      </BuildDependsOn>
  </PropertyGroup>

</Project>