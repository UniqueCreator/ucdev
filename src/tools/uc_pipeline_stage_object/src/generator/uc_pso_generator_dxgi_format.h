#pragma once

#include <generator/uc_pso_generator_includes.h>
#include "pipeline_state_types.h"

namespace uc
{
    namespace pso
    {
        namespace generator
        {
            template <typename iterator >
            struct dxgi_format : karma::grammar< iterator, DXGI_FORMAT() >
            {
                using base = karma::grammar< iterator, DXGI_FORMAT() >;

            public:
                dxgi_format() : base(m_start, "dxgi_format")
                {
                    m_value.add
                        (DXGI_FORMAT_UNKNOWN, STRINGIFY_TYPE(DXGI_FORMAT_UNKNOWN))
                        (DXGI_FORMAT_R32G32B32A32_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R32G32B32A32_TYPELESS))
                        (DXGI_FORMAT_R32G32B32A32_FLOAT, STRINGIFY_TYPE(DXGI_FORMAT_R32G32B32A32_FLOAT))
                        (DXGI_FORMAT_R32G32B32A32_UINT, STRINGIFY_TYPE(DXGI_FORMAT_R32G32B32A32_UINT))
                        (DXGI_FORMAT_R32G32B32A32_SINT, STRINGIFY_TYPE(DXGI_FORMAT_R32G32B32A32_SINT))
                        (DXGI_FORMAT_R32G32B32_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R32G32B32_TYPELESS))
                        (DXGI_FORMAT_R32G32B32_FLOAT, STRINGIFY_TYPE(DXGI_FORMAT_R32G32B32_FLOAT))
                        (DXGI_FORMAT_R32G32B32_UINT, STRINGIFY_TYPE(DXGI_FORMAT_R32G32B32_UINT))
                        (DXGI_FORMAT_R32G32B32_SINT, STRINGIFY_TYPE(DXGI_FORMAT_R32G32B32_SINT))
                        (DXGI_FORMAT_R16G16B16A16_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R16G16B16A16_TYPELESS))
                        (DXGI_FORMAT_R16G16B16A16_FLOAT, STRINGIFY_TYPE(DXGI_FORMAT_R16G16B16A16_FLOAT))
                        (DXGI_FORMAT_R16G16B16A16_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_R16G16B16A16_UNORM))
                        (DXGI_FORMAT_R16G16B16A16_UINT, STRINGIFY_TYPE(DXGI_FORMAT_R16G16B16A16_UINT))
                        (DXGI_FORMAT_R16G16B16A16_SNORM, STRINGIFY_TYPE(DXGI_FORMAT_R16G16B16A16_SNORM))
                        (DXGI_FORMAT_R16G16B16A16_SINT, STRINGIFY_TYPE(DXGI_FORMAT_R16G16B16A16_SINT))
                        (DXGI_FORMAT_R32G32_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R32G32_TYPELESS))
                        (DXGI_FORMAT_R32G32_FLOAT, STRINGIFY_TYPE(DXGI_FORMAT_R32G32_FLOAT))
                        (DXGI_FORMAT_R32G32_UINT, STRINGIFY_TYPE(DXGI_FORMAT_R32G32_UINT))
                        (DXGI_FORMAT_R32G32_SINT, STRINGIFY_TYPE(DXGI_FORMAT_R32G32_SINT))
                        (DXGI_FORMAT_R32G8X24_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R32G8X24_TYPELESS))
                        (DXGI_FORMAT_D32_FLOAT_S8X24_UINT, STRINGIFY_TYPE(DXGI_FORMAT_D32_FLOAT_S8X24_UINT))
                        (DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS))
                        (DXGI_FORMAT_X32_TYPELESS_G8X24_UINT, STRINGIFY_TYPE(DXGI_FORMAT_X32_TYPELESS_G8X24_UINT))
                        (DXGI_FORMAT_R10G10B10A2_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R10G10B10A2_TYPELESS))
                        (DXGI_FORMAT_R10G10B10A2_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_R10G10B10A2_UNORM))
                        (DXGI_FORMAT_R10G10B10A2_UINT, STRINGIFY_TYPE(DXGI_FORMAT_R10G10B10A2_UINT))
                        (DXGI_FORMAT_R11G11B10_FLOAT, STRINGIFY_TYPE(DXGI_FORMAT_R11G11B10_FLOAT))
                        (DXGI_FORMAT_R8G8B8A8_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R8G8B8A8_TYPELESS))
                        (DXGI_FORMAT_R8G8B8A8_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_R8G8B8A8_UNORM))
                        (DXGI_FORMAT_R8G8B8A8_UNORM_SRGB, STRINGIFY_TYPE(DXGI_FORMAT_R8G8B8A8_UNORM_SRGB))
                        (DXGI_FORMAT_R8G8B8A8_UINT, STRINGIFY_TYPE(DXGI_FORMAT_R8G8B8A8_UINT))
                        (DXGI_FORMAT_R8G8B8A8_SNORM, STRINGIFY_TYPE(DXGI_FORMAT_R8G8B8A8_SNORM))
                        (DXGI_FORMAT_R8G8B8A8_SINT, STRINGIFY_TYPE(DXGI_FORMAT_R8G8B8A8_SINT))
                        (DXGI_FORMAT_R16G16_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R16G16_TYPELESS))
                        (DXGI_FORMAT_R16G16_FLOAT, STRINGIFY_TYPE(DXGI_FORMAT_R16G16_FLOAT))
                        (DXGI_FORMAT_R16G16_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_R16G16_UNORM))
                        (DXGI_FORMAT_R16G16_UINT, STRINGIFY_TYPE(DXGI_FORMAT_R16G16_UINT))
                        (DXGI_FORMAT_R16G16_SNORM, STRINGIFY_TYPE(DXGI_FORMAT_R16G16_SNORM))
                        (DXGI_FORMAT_R16G16_SINT, STRINGIFY_TYPE(DXGI_FORMAT_R16G16_SINT))
                        (DXGI_FORMAT_R32_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R32_TYPELESS))
                        (DXGI_FORMAT_D32_FLOAT, STRINGIFY_TYPE(DXGI_FORMAT_D32_FLOAT))
                        (DXGI_FORMAT_R32_FLOAT, STRINGIFY_TYPE(DXGI_FORMAT_R32_FLOAT))
                        (DXGI_FORMAT_R32_UINT, STRINGIFY_TYPE(DXGI_FORMAT_R32_UINT))
                        (DXGI_FORMAT_R32_SINT, STRINGIFY_TYPE(DXGI_FORMAT_R32_SINT))
                        (DXGI_FORMAT_R24G8_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R24G8_TYPELESS))
                        (DXGI_FORMAT_D24_UNORM_S8_UINT, STRINGIFY_TYPE(DXGI_FORMAT_D24_UNORM_S8_UINT))
                        (DXGI_FORMAT_R24_UNORM_X8_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R24_UNORM_X8_TYPELESS))
                        (DXGI_FORMAT_X24_TYPELESS_G8_UINT, STRINGIFY_TYPE(DXGI_FORMAT_X24_TYPELESS_G8_UINT))
                        (DXGI_FORMAT_R8G8_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R8G8_TYPELESS))
                        (DXGI_FORMAT_R8G8_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_R8G8_UNORM))
                        (DXGI_FORMAT_R8G8_UINT, STRINGIFY_TYPE(DXGI_FORMAT_R8G8_UINT))
                        (DXGI_FORMAT_R8G8_SNORM, STRINGIFY_TYPE(DXGI_FORMAT_R8G8_SNORM))
                        (DXGI_FORMAT_R8G8_SINT, STRINGIFY_TYPE(DXGI_FORMAT_R8G8_SINT))
                        (DXGI_FORMAT_R16_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R16_TYPELESS))
                        (DXGI_FORMAT_R16_FLOAT, STRINGIFY_TYPE(DXGI_FORMAT_R16_FLOAT))
                        (DXGI_FORMAT_D16_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_D16_UNORM))
                        (DXGI_FORMAT_R16_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_R16_UNORM))
                        (DXGI_FORMAT_R16_UINT, STRINGIFY_TYPE(DXGI_FORMAT_R16_UINT))
                        (DXGI_FORMAT_R16_SNORM, STRINGIFY_TYPE(DXGI_FORMAT_R16_SNORM))
                        (DXGI_FORMAT_R16_SINT, STRINGIFY_TYPE(DXGI_FORMAT_R16_SINT))
                        (DXGI_FORMAT_R8_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_R8_TYPELESS))
                        (DXGI_FORMAT_R8_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_R8_UNORM))
                        (DXGI_FORMAT_R8_UINT, STRINGIFY_TYPE(DXGI_FORMAT_R8_UINT))
                        (DXGI_FORMAT_R8_SNORM, STRINGIFY_TYPE(DXGI_FORMAT_R8_SNORM))
                        (DXGI_FORMAT_R8_SINT, STRINGIFY_TYPE(DXGI_FORMAT_R8_SINT))
                        (DXGI_FORMAT_A8_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_A8_UNORM))
                        (DXGI_FORMAT_R1_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_R1_UNORM))
                        (DXGI_FORMAT_R9G9B9E5_SHAREDEXP, STRINGIFY_TYPE(DXGI_FORMAT_R9G9B9E5_SHAREDEXP))
                        (DXGI_FORMAT_R8G8_B8G8_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_R8G8_B8G8_UNORM))
                        (DXGI_FORMAT_G8R8_G8B8_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_G8R8_G8B8_UNORM))
                        (DXGI_FORMAT_BC1_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_BC1_TYPELESS))
                        (DXGI_FORMAT_BC1_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_BC1_UNORM))
                        (DXGI_FORMAT_BC1_UNORM_SRGB, STRINGIFY_TYPE(DXGI_FORMAT_BC1_UNORM_SRGB))
                        (DXGI_FORMAT_BC2_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_BC2_TYPELESS))
                        (DXGI_FORMAT_BC2_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_BC2_UNORM))
                        (DXGI_FORMAT_BC2_UNORM_SRGB, STRINGIFY_TYPE(DXGI_FORMAT_BC2_UNORM_SRGB))
                        (DXGI_FORMAT_BC3_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_BC3_TYPELESS))
                        (DXGI_FORMAT_BC3_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_BC3_UNORM))
                        (DXGI_FORMAT_BC3_UNORM_SRGB, STRINGIFY_TYPE(DXGI_FORMAT_BC3_UNORM_SRGB))
                        (DXGI_FORMAT_BC4_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_BC4_TYPELESS))
                        (DXGI_FORMAT_BC4_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_BC4_UNORM))
                        (DXGI_FORMAT_BC4_SNORM, STRINGIFY_TYPE(DXGI_FORMAT_BC4_SNORM))
                        (DXGI_FORMAT_BC5_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_BC5_TYPELESS))
                        (DXGI_FORMAT_BC5_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_BC5_UNORM))
                        (DXGI_FORMAT_BC5_SNORM, STRINGIFY_TYPE(DXGI_FORMAT_BC5_SNORM))
                        (DXGI_FORMAT_B5G6R5_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_B5G6R5_UNORM))
                        (DXGI_FORMAT_B5G5R5A1_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_B5G5R5A1_UNORM))
                        (DXGI_FORMAT_B8G8R8A8_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_B8G8R8A8_UNORM))
                        (DXGI_FORMAT_B8G8R8X8_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_B8G8R8X8_UNORM))
                        (DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM))
                        (DXGI_FORMAT_B8G8R8A8_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_B8G8R8A8_TYPELESS))
                        (DXGI_FORMAT_B8G8R8A8_UNORM_SRGB, STRINGIFY_TYPE(DXGI_FORMAT_B8G8R8A8_UNORM_SRGB))
                        (DXGI_FORMAT_B8G8R8X8_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_B8G8R8X8_TYPELESS))
                        (DXGI_FORMAT_B8G8R8X8_UNORM_SRGB, STRINGIFY_TYPE(DXGI_FORMAT_B8G8R8X8_UNORM_SRGB))
                        (DXGI_FORMAT_BC6H_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_BC6H_TYPELESS))
                        (DXGI_FORMAT_BC6H_UF16, STRINGIFY_TYPE(DXGI_FORMAT_BC6H_UF16))
                        (DXGI_FORMAT_BC6H_SF16, STRINGIFY_TYPE(DXGI_FORMAT_BC6H_SF16))
                        (DXGI_FORMAT_BC7_TYPELESS, STRINGIFY_TYPE(DXGI_FORMAT_BC7_TYPELESS))
                        (DXGI_FORMAT_BC7_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_BC7_UNORM))
                        (DXGI_FORMAT_BC7_UNORM_SRGB, STRINGIFY_TYPE(DXGI_FORMAT_BC7_UNORM_SRGB))
                        (DXGI_FORMAT_AYUV, STRINGIFY_TYPE(DXGI_FORMAT_AYUV))
                        (DXGI_FORMAT_Y410, STRINGIFY_TYPE(DXGI_FORMAT_Y410))
                        (DXGI_FORMAT_Y416, STRINGIFY_TYPE(DXGI_FORMAT_Y416))
                        (DXGI_FORMAT_NV12, STRINGIFY_TYPE(DXGI_FORMAT_NV12))
                        (DXGI_FORMAT_P010, STRINGIFY_TYPE(DXGI_FORMAT_P010))
                        (DXGI_FORMAT_P016, STRINGIFY_TYPE(DXGI_FORMAT_P016))
                        (DXGI_FORMAT_420_OPAQUE, STRINGIFY_TYPE(DXGI_FORMAT_420_OPAQUE))
                        (DXGI_FORMAT_YUY2, STRINGIFY_TYPE(DXGI_FORMAT_YUY2))
                        (DXGI_FORMAT_Y210, STRINGIFY_TYPE(DXGI_FORMAT_Y210))
                        (DXGI_FORMAT_Y216, STRINGIFY_TYPE(DXGI_FORMAT_Y216))
                        (DXGI_FORMAT_NV11, STRINGIFY_TYPE(DXGI_FORMAT_NV11))
                        (DXGI_FORMAT_AI44, STRINGIFY_TYPE(DXGI_FORMAT_AI44))
                        (DXGI_FORMAT_IA44, STRINGIFY_TYPE(DXGI_FORMAT_IA44))
                        (DXGI_FORMAT_P8, STRINGIFY_TYPE(DXGI_FORMAT_P8))
                        (DXGI_FORMAT_A8P8, STRINGIFY_TYPE(DXGI_FORMAT_A8P8))
                        (DXGI_FORMAT_B4G4R4A4_UNORM, STRINGIFY_TYPE(DXGI_FORMAT_B4G4R4A4_UNORM))
                        (DXGI_FORMAT_P208, STRINGIFY_TYPE(DXGI_FORMAT_P208))
                        (DXGI_FORMAT_V208, STRINGIFY_TYPE(DXGI_FORMAT_V208))
                        (DXGI_FORMAT_V408, STRINGIFY_TYPE(DXGI_FORMAT_V408))
                        ;

                    m_start = m_value;
                }

                karma::symbols<DXGI_FORMAT, const char* >                      m_value;
                karma::rule<iterator, DXGI_FORMAT()>                           m_start;
            };


            template <typename iterator>
            struct dxgi_format_vector : karma::grammar< iterator, std::vector< DXGI_FORMAT >() >
            {
                using base = karma::grammar< iterator, std::vector< DXGI_FORMAT >() >;

            public:

                dxgi_format_vector() : base(m_start, "dxgi_format_vector")
                {
                    m_start = '{'
                        << -(m_elements % ',')
                        << '}'
                        ;
                }

                karma::rule<iterator, std::vector< DXGI_FORMAT>() >  m_start;
                dxgi_format<iterator>                                m_elements;
            };
        }
    }
}


