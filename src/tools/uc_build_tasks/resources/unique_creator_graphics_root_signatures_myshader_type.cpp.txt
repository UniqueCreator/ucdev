#pragma once

//autogenerated code

#include "pch.h"
#include "my_shader_type.h"

#include <uc_public/graphics/resource_create_context.h>
#include <uc_public/graphics/root_signature.h>

namespace UniqueCreator
{
    namespace Graphics
    {
        namespace RootSignatures
        {
            namespace my_shader_type_private
            {
                namespace
                {
                    static
                    #include "shader.hlsl.dxbc.h"
                    ;
                }
            }

            my_shader_type::my_shader_type( )
            {
                m_code      = my_shader_type_private::g_main;
                m_code_size = sizeof(my_shader_type_private::g_main);
            }

            const RootSignature* create_my_shader_type( ResourceCreateContext* rc )
            {
                my_shader_type shader;
                static std::unique_ptr<RootSignature> r = rc->CreateRootSignature(&shader);
                return r.get();
            }
        }
    }
}
